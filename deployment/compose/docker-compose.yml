services:
  web:
    build:
      context: ../../
      dockerfile: Dockerfile
    container_name: hanz_prod_app
    restart: unless-stopped
    ports:
      - "58181:8000"
    networks:
      - hanz-nw
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgres://user:dbpassword@db:5432/hanz-db
      - REDIS_URL=redis://redis:6379/1
      - RUN_MIGRATION=true
      - UID=${UID:-1000}
      - GID=${GID:-1000}
    env_file:
      - .env
    command: "granian --interface wsgi hanz.wsgi:application --host 0.0.0.0 --port 8000 \
      --workers 2 --threads 2 --log-level info"
  
  static_build:
    build:
      context: ../../
      dockerfile: Dockerfile
    container_name: hanz_prod_static_build
    networks:
      - hanz-nw
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgres://user:dbpassword@db:5432/hanz-db
      - REDIS_URL=redis://redis:6379/1
      - COLLECT_STATIC=true
      - UID=${UID:-1000}
      - GID=${GID:-1000}
    env_file:
      - .env
    volumes:
      - ../../static:/app/src/static/
    command: "python manage.py collectstatic --noinput --clear && \
              python manage.py collectstatic --noinput && \
              python manage.py compress --force"

  db:
    image: postgres:15-alpine
    container_name: hanz_prod_postgres_db
    restart: unless-stopped
    networks:
      - hanz-nw
      - db
    volumes:
      - /opt/databases/prod/hanz-web/postgresql/db:/var/lib/postgresql/db
    environment:
      - POSTGRES_DB=hanz-db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=dbpassword
      - PGDATA=/var/lib/postgresql/db

  redis:
    image: redis:7-alpine
    container_name: hanz_prod_app_redis
    restart: unless-stopped
    networks:
      - hanz-nw


networks:
  hanz-nw:
    driver: bridge
  db:
