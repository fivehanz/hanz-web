services:
  nginx:
    image: nginx:stable
    container_name: hanz_dev_nginx_server
    restart: unless-stopped
    ports:
      - "8080:80"
    networks:
      - hanz-nw
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./deployment/nginx/vhost.dev.conf:/etc/nginx/conf.d/default.conf
      - ./media:/app/media
      - ./static:/app/static

  web:
    build:
      context: .
      dockerfile: dev.Dockerfile
    container_name: hanz_app_dev
    restart: unless-stopped
    volumes:
      - ./:/app/src
    ports:
      - "8000:8000"
    networks:
      - hanz-nw
    depends_on:
      - redis
    environment:
      - DATABASE_URL=postgres://user:password@db:5432/hanz-db
      - REDIS_URL=redis://redis:6379/1
      - S3_ADDRESSING_STYLE=auto
      - RUN_MIGRATION=true
    env_file:
      - .env

  minio:
    image: quay.io/minio/minio
    container_name: hanz_dev_app_minio
    restart: unless-stopped
    networks:
      - hanz-nw
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./dev_data/minio/data:/data
    env_file:
      - .env
    command: server /data --console-address ":9001"

  db:
    image: postgres:16-alpine
    container_name: hanz_dev_postgres_db
    restart: unless-stopped
    networks:
      - hanz-nw
    volumes:
      - hanz-db-data:/var/lib/postgresql/db
    environment:
      - POSTGRES_DB=hanz-db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - PGDATA=/var/lib/postgresql/db

  redis:
    image: redis:7-alpine
    container_name: hanz_dev_app_redis
    restart: unless-stopped
    networks:
      - hanz-nw

networks:
  hanz-nw:
    driver: bridge

volumes:
  hanz-db-data:
