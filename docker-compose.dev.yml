version: '3.8'

services:
  nginx:
    image: nginx:stable
    container_name: nginx_server
    restart: unless-stopped
    ports:
      - 8080:80
    networks:
      - web
      - hanz-nw
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./deployment/nginx/vhost.dev.conf:/etc/nginx/conf.d/default.conf
      - ./media:/app/media
      - ./static:/app/static
    depends_on:
      - web

  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: hanz_app_dev
    restart: unless-stopped
    networks:
      - hanz-nw
      - web
    # depends_on:
      # - db
    environment:
      # - DATABASE_URL=postgres://user:dbpassword@db:5432/hanz-db
      - DATABASE_URL=${DATABASE_URL}
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOW_HOST=${ALLOW_HOST}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - CSRF_TRUSTED_ORIGIN=${CSRF_TRUSTED_ORIGIN}
      - COMPRESS_ENABLED=${COMPRESS_ENABLED}

  # db:
  #   image: postgres:15-bookworm
  #   container_name: hanz_dev_postgres_db
  #   restart: unless-stopped
  #   networks:
  #     - hanz-nw
  #     - db
  #   volumes:
  #     - ./dev_data/postgresql/db:/var/lib/postgresql/db
  #   environment:
  #     - POSTGRES_DB=hanz-db
  #     - POSTGRES_USER=user
  #     - POSTGRES_PASSWORD=dbpassword
  #     - PGDATA=/var/lib/postgresql/db
      # Add other PostgreSQL configurations as needed

networks:
  hanz-nw:
    driver: bridge
  # db:
  web:

